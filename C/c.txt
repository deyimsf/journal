C语言的几种基本数据类型
 char 字符型，一个字节
 int 整形，通常反映所用机器中整数的最自然长度，至少16位
 float 当精度浮点
 double 双精度浮点
 
限定符
 short
 long
 signed
 unsigned

'\000' 用八进制表示一个字符 如'\013'
'\xhh' 用十六进制表示一个字符 如'\xb'

按位运算符
 &  按位与
 |  按位或
 ^  按位异或
 << 左移
 >> 右移
 ~  按位求反

C语言没有指定同一运算符的计算顺序
 例如x = f() + g(); 两个函数的计算顺序依赖于具体的编译器
C语言也没有指定函数参数的求职顺序
 printf("%d %d\n",++n,power(2,n)); 不确定++n先执行还是pwoer()先执行
a[i] = i++; 存在同样的问题

函数隐式声明
 如果函数没有原型声明，那么函数会在第一次出现的地方被隐式声明。
 被声明的函数返回值被假定为int型，但不对参数做类型假设。

函数的声明和定义必须一致，如果声明和定义在一个文件，则编译器会检查到该错误。
如果不在同一个文件，则无法检测到，这件会导致声明是int，定义且是其他类型(如double).
所以函数的声明和定义最好在一个文件中。

函数声明的一个例子
   int sum;
   //cc 这函数第一次出现，所以隐式声明为 int cc();
   //不对参数做假设.所以输入什么参数都可以.
   //注意：int cc(); int cc(void); 这两种声明是不一样的，
   //int cc()会把后边出现的第一个int cc(...){}视为定义
   //int cc(void) 只会把 int cc(){} 视为定义
   sum = cc("2.4");

   1) int cc(char a[]){}
   //如果1) 随后首先出现，那么1) 将被视为函数定义

   2) int cc(char a[], char b[]){}
   //如果2) 随后首先出现，那么2) 将被视为函数定义
 
   注意：1)和2)不可同时出现，因为名字相同，所以视为重复定义

   3) double cc(char a[] , char b[]){} 
   //如果3) 随后首先出现,那么3) 被视为重复声明, 并不会把这个函数看成一个定义。
   //因为前面隐式声明的类型是int,而这里是一个double
   //类似这样：int cc(); double cc();

   注意：函数声明时按照名字来确定是否已经声明；按照声明的类型和名字
         确定是否定义了函数。C语言中不会存在同名的函数。

指针和指针变量
 #include <stdio.h>
 main(){
	int  x=2;
	int* y = &x; //y是一个整型指针(地址)变量,&x是一个整型指针(地址) *y是y这个地址所指向的内容，是个整型.

	printf("%d\n",y);     //表示地址
	printf("%d\n",&x);    //表示地址
	printf("%d\n",&(*y)); //表示*y这个整型的地址

	printf("%d\n",*y);    //内存地址指向的内容
	printf("%d\n",*(&x)); //内存地址指向的内容
 } 

C中变量作用域
 在函数外的是全局变量，相同的全局变量名在整个程序中只能出现一次，
 不管这个程序是在一个文件中，还是分散在多个文件中的。
 
 在函数内的是局部变量，函数内的和函数外的相同名字的变量不会冲突。
 如果函数内要访问外部变量，如果在同一个文件内，且函数的位置在外部
 变量的后面，则可以访问，否则需要用extern进行声明。

 static修饰符可以将变量的访问范围锁定在文件内或函数内，并且该变量
 一直占用空间。
 如果变量 static int sp = 0;在某个文件内,则其他任何文件都无法访问
 该变量;如果在函数内,和其他变量的区别是,函数结束后该变量不释放空间
 
宏定义
 #define 名字 替换文本
 宏定义只是做简单的文本替换：
  #define max(A,B) A * B
  使用宏max看起来很像是函数调用,但宏调用直接将替换文本插入到代码中。
  形式参数的每次出现都将被替换成对应的实际参数。因此，语句：
	x = max(a+b,c+d);
  将被替换为：
	x = a+b*c+d;
 在替换文本中，如果参数名以#作为前缀,则参数将被替换成加双引号的字符串
 例如语句：
 	#define print(expr) printf( #expr "=%g\n",expr)
 使用语句
	print(x/y); 
 调用时将被替换为：
	printf( "x/y" "=%g\n",x/y);

 使用语句
	print("x/y");
 调用时将被替换为：
	printf( \""x/y"\" "=%g\n",\"x/y\");
 
 ##运算符用于连接两个实际的参数，如：
	#define aa(a,b) a  ## b
 调用语句
	aa(name,age);
 将被替换为：
	namgeage; //去掉了##前后的空格 

 条件包含
 defined(exp),如果exp已经被定义,其值是1，否则是0
 例句：
  #if !defined(HDR) //如果没有定义HDR
    #define HDR "aaa.h"
  #elif SYSTEM == SYSV //如果系统变量SYSTEM是SYSV
    #define HDR "bsd.h"
  #else
    #define HDR "default.h" 
  #endif
  #include HDR

 C语言专门定义的两个预处理命令
  #ifdef  //如果定义了
  #ifndef //如果没定义

C数组指针
 int bb[13];
 bb是一个指针，但不是指针变量；bb这个指针指向的是一个int型;
 &bb和bb的值一样，但意思不一样，&bb指向的是一个长度是13的int型的数组;
 所以，如果int占四个字节，那么 bb+1 跨4个字节; (&bb)+1 跨13*4个字节;

 int *bb[13]
 bb是一个指向指针的指针，数组里面的值bb[i]是一个指针，这个指针(bb[i])指向一个int型;

 int (*bb)[13]
 bb指向的是一个长度是13的int型的数组;
 bb+1 的地址跨度是13*4个字节;
